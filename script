// Function to calculate total left and right counts for a user
async function getTotalCounts(userId) {
  try {
    // Function to get users and counts recursively
    async function getUsersAndCounts(parentId) {
      const users = await User.find({ parent_id: parentId });
      const counts = { left: 0, right: 0 };

      for (const user of users) {
        const childrenCounts = await getUsersAndCounts(user.own_id);
        counts.left += user.position === 'Left' ? 1 + childrenCounts.left + childrenCounts.right : 0;
        counts.right += user.position === 'Right' ? 1 + childrenCounts.left + childrenCounts.right : 0;
      }

      return counts;
    }

    // Find the root user
    const rootUser = await User.findOne({ own_id: userId });

    if (!rootUser) {
      throw new Error('Root user not found');
    }

    // Start counting from the root user
    const rootCounts = await getUsersAndCounts(userId);

    return rootCounts;
  } catch (error) {
    throw error;
  }
}

// Example usage:
const userId1 = '0987654321'; // Replace with the actual userId
getTotalCounts(userId)
  .then(counts => console.log(counts))
  .catch(error => console.error(error));




  /////////////////////////////////////////////////income

  
// Function to calculate income for a user
async function calculateIncome(userId) {
  try {
    // Find the user based on the given userId
    const user = await User.findOne({ own_id: userId });

    if (!user) {
      throw new Error("User not found");
    }

    // Assuming product price is 100 for example
    const productPrice = 11500;

    // Calculate the minimum of total left and total right counts
    const minCount = Math.min(user.TotalLeftCount, user.TotalRightCount);

    console.log(minCount);
    // Calculate income based on the minimum count and product price
    const income = minCount * 0.05 * productPrice;

    return income;
  } catch (error) {
    throw error;
  }
}

// Example usage:
const userId = "0987654321"; // Replace with the actual userId
calculateIncome(userId)
  .then((income) => console.log(`Income for user ${userId}: ${income}`))
  .catch((error) => console.error(error));
